name: Quality checks
on: [push, pull_request]

env:
  GOPROXY: ${{ vars.GOPROXY }}

jobs:
  lint:
    runs-on: ${{ vars.RUNNER_UBUNTU && fromJSON(vars.RUNNER_UBUNTU) || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v3
      - uses: golangci/golangci-lint-action@v3
        env:
          GO111MODULE: "on"

  test:
    runs-on: ${{ vars.RUNNER_UBUNTU && fromJSON(vars.RUNNER_UBUNTU) || 'ubuntu-latest' }}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.17

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Test
      run: go test ./...

  build:
    runs-on: ${{ vars.RUNNER_UBUNTU && fromJSON(vars.RUNNER_UBUNTU) || 'ubuntu-latest' }}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.17

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Test
      run: go build -v -race ./cmd/Petdemo
